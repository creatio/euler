/**
 * two.d
 * ```````````````````````````````````````````````````````````````````````````
 * Each new term in the Fibonacci sequence is generated by adding the previous 
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not 
 * exceed four million, find the sum of the even-valued terms.
 * ```````````````````````````````````````````````````````````````````````````
 */
module two;
import std.stdio;

int main(string[] argv)
{
	immutable int limit = 4000000;
	
	writeln(fibonacci_even_sum(limit));
	
	return 0;
}

int fibonacci(int limit)
{
	if(limit == 0 || limit == 1)
		return 1;
	
	return fibonacci(limit - 1) + fibonacci(limit - 2);
}

int fibonacci_even_sum(int limit)
{
	int sum = 0;

	for(int i = 1, fib = 0;; ++i)
	{
		fib = fibonacci(i);
		
		if(fib > limit)
			break;
		
		if(fib % 2 == 0)
			sum += fib;
	}

	return sum;
}

/**
 * Unit test for the fibonacci function
 */
unittest 
{
	int result = -1;
	
	// we test value 1
	result = fibonacci(1);
	assert(result == 1, "result should equal 1");
	
	// we test value 1
	result = fibonacci(6);
	assert(result == 13, "result should equal 13");
	
	// we test value 10
	result = fibonacci(10);
	assert(result == 89, "result should equal 89");
}

/**
 * Unit test for the fibonacci_even_sum function
 */
unittest
{
	auto result = fibonacci_even_sum(100);
	assert(result == 44, "sum of the first fibonacci terms does not equal 44");
}